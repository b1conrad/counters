ruleset net.sanbachs.counters {
  meta {
    shares __testing, number
  }
  global {
    __testing = { "queries": [ { "name": "__testing" } ],
                  "events": [ {"domain": "counters", "type": "hit" } ] }
    oct = function(v) {0 <= v && v <= 255};             // valid octet
    val = function(color) {                             // validate color triplet
      c_val = color.decode();
      c_ok = color && c_val.typeof()=="Array"
                   && c_val.length()==3
                   && c_val.filter(oct).length()==3;
      c_ok => c_val | null
    }
    // header fragments given width and colors
    h = function(len,color,bgcolor) {
      c = val(color).defaultsTo([0,0,0]);
      b = val(bgcolor).defaultsTo([255,255,255]);
      "GIF89a".split(re##).map(function(v){v.ord()})
              .append([len*10])
              .append([0,20,0,128,0,1])
              .append(c)
              .append(b)
    };
    // separator fragment
    S = [",".ord()];
    // position fragments
    p = function(pos) {
      [pos*10]
    };
    // digit fragments
    D0 = [0,0,0,10,0,20,0,0,8,47,0,3,8,28,72,176,160,193,131,8,19,42,92,200,176,161,64,0,16,1,20,148,56,144,226,67,130,22,3,100,220,136,177,99,69,143,23,63,138,12,73,242,97,196,134,1,255,0];
    D1 = [0,0,0,10,0,20,0,0,8,44,0,3,8,28,72,176,160,193,131,8,19,42,92,200,176,225,64,0,0,12,66,12,16,17,97,197,131,23,37,38,204,88,144,35,65,143,15,37,66,28,9,146,96,192,0];
    D2 = [0,0,0,10,0,20,0,0,8,45,0,3,8,28,72,176,160,193,131,8,19,42,92,200,176,161,64,0,16,33,18,4,80,144,226,195,138,9,45,26,212,56,145,227,64,143,31,17,122,212,24,177,228,194,128,0];
    D3 = [0,0,0,10,0,20,0,0,8,44,0,3,8,28,72,176,160,193,131,8,19,42,92,200,176,225,64,0,16,1,16,132,56,49,161,68,132,23,39,82,196,168,48,163,193,140,30,3,120,140,184,81,97,192,0];
    D4 = [0,0,0,10,0,20,0,0,8,44,0,3,8,28,72,176,160,193,131,8,19,42,92,200,176,97,65,0,8,1,64,52,8,113,34,193,137,22,7,98,124,168,241,161,196,143,17,19,102,212,8,114,97,192,0];
    D5 = [0,0,0,10,0,20,0,0,8,43,0,3,8,28,72,176,160,193,131,8,19,42,92,200,176,161,64,0,16,33,22,4,144,144,34,66,139,7,35,74,172,200,241,226,64,140,15,9,106,4,137,48,224,0];
    D6 = [0,0,0,10,0,20,0,0,8,47,0,3,8,28,72,176,160,193,131,8,19,42,92,200,176,33,65,0,16,1,20,148,120,144,162,65,139,23,3,68,196,8,241,225,64,140,26,63,78,20,233,241,227,70,134,1,255,0];
    D7 = [0,0,0,10,0,20,0,0,8,43,0,3,8,28,72,176,160,193,131,8,19,42,92,200,176,97,0,0,16,35,2,24,56,145,96,197,131,23,11,102,212,136,112,163,197,132,30,5,134,20,233,48,224,0];
    D8 = [0,0,0,10,0,20,0,0,8,48,0,3,8,28,72,176,160,193,131,8,19,42,92,200,176,161,64,0,16,1,20,148,56,144,226,67,130,22,3,100,204,168,49,226,68,140,32,43,134,188,40,178,100,69,143,12,3,254,0];
    D9 = [0,0,0,10,0,20,0,0,8,48,0,3,8,28,72,176,160,193,131,8,19,42,92,200,176,161,64,0,16,1,20,148,56,144,226,67,130,22,3,100,220,88,49,163,70,136,26,19,122,172,136,112,100,68,135,1,2,254,0];
    D = [D0,D1,D2,D3,D4,D5,D6,D7,D8,D9];
    // terminator fragment
    T = [";".ord()];

    flt = function(a,v){a.append(v)};                   // flatten
    dgt = function(v,k) {S.append(p(k)).append(D[v])};  // digit fragment
    // /sky/cloud/<ECI>/<RID>/number.gif?n=999&color=[R,G,B]&bgcolor=[R,G,B]
    number = function(n,color,bgcolor) {
      num = n.as("String").extract(re#(\d)#g).join("");
      num_len = (num.length() <= 25) => num.length() | 25;
      h(num_len,color,bgcolor)
        .append(num.substr(0,num_len).split(re##).map(dgt).reduce(flt,[]))
        .append(T)
    }
  }
  rule increment_and_display_counter {
    select when counters hit
    pre {
      new_count = ent:counter.defaultsTo(0) + 1;
      image = number(new_count);
    }
    send_directive("_gif",{"content": image})
    fired {
      ent:counter := new_count;
    }
  }
}
